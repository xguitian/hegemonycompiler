package cup;

import java_cup.runtime.*;
import java.util.List;
import java.util.ArrayList;
import hegemony.main.HegemonyOrder;
import hegemony.main.OrdersFile;
import hegemony.scanner.HegemonySymbol;
import hegemony.exception.ParserFatalErrorException;
import hegemony.main.ParserFatalError;

parser code  {:

  public void report_error(String message, Object info) {
//    StringBuffer m = new StringBuffer("Error ");

//    if (info instanceof java_cup.runtime.Symbol) 
//      m.append( "("+info.toString()+")" );
     
//    m.append(" : "+message);
   
//    System.out.println(m);
  }
   
  public void report_fatal_error(String message, Object info) 
  		throws ParserFatalErrorException {
    throw new ParserFatalErrorException(new ParserFatalError((HegemonySymbol) info));
  }
:};

terminal	EOL;
terminal	WORD, NUMBER;
terminal	ARMY, NAVY;
terminal	MOVE, SUPPORT, POLITIC_POINTS, DECLARE_WAR, DECLARE_PEACE;

non terminal file, order, unit, name, politic_order, troop_order, diplomatic_order;

/*
non terminal OrdersFile file;
non terminal HegemonyOrder order;
non terminal HegemonyOrder.Unit unit;
non terminal String name;
non terminal HegemonyOrder.OrderType order_type;
*/

start with file;

file ::= order:o EOL file:f					{: RESULT = new OrdersFile((OrdersFile) f, ((HegemonyOrder) o).setLine(((HegemonySymbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).getLine())); :}
	   | order:o EOL						{: RESULT = new OrdersFile(((HegemonyOrder) o).setLine(((HegemonySymbol) CUP$parser$stack.peek()).getLine())); :}
       | EOL file:f							{: RESULT = f; :}
       | EOL								/* do nothing */
       ;

order ::= unit:u name:s troop_order:a name:t	{: RESULT = new HegemonyOrder((HegemonyOrder.OrderType) a, (HegemonyOrder.Unit) u, (String) s, (String) t); :} 
        | politic_order:a NUMBER:n name:t		{: RESULT = new HegemonyOrder((HegemonyOrder.OrderType) a, (String) t, (Integer) n); :}
        | diplomatic_order:a name:t				{: RESULT = new HegemonyOrder((HegemonyOrder.OrderType) a, (String) t); :}
        ;

name ::= WORD:w								{: RESULT = (String) w; :}
	   | WORD:w name:n						{: RESULT = ((String) w).concat(" ").concat((String) n); :}
	   ;
		
unit ::= ARMY 								{: RESULT = HegemonyOrder.Unit.ARMY; :}
       | NAVY 								{: RESULT = HegemonyOrder.Unit.NAVY; :}
       ;

troop_order ::= MOVE						{: RESULT = HegemonyOrder.OrderType.MOVE; :}
              | SUPPORT						{: RESULT = HegemonyOrder.OrderType.SUPPORT; :}
              ;

politic_order ::= POLITIC_POINTS			{: RESULT = HegemonyOrder.OrderType.POLITIC_POINTS; :}
                ;

diplomatic_order ::= DECLARE_WAR			{: RESULT = HegemonyOrder.OrderType.DECLARE_WAR; :}
                   | DECLARE_PEACE			{: RESULT = HegemonyOrder.OrderType.DECLARE_PEACE; :}
                   ;

